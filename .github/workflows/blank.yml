name: Turtle Trading Report

on:
  schedule:
    # 한국 시간으로 오전 7시, 오후 9시에 실행 (UTC 기준)
    - cron: '0 22,12 * * *'
  workflow_dispatch:
    inputs:
      report_type:
        description: 'Select report type'
        required: true
        default: 'morning_plan'
        type: choice
        options:
          - morning_plan
          - evening_realtime

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # 1단계: 티커 목록 스크래핑 스크립트 실행
      - name: Scrape tickers from Wikipedia
        run: |
          python get_tickers.py

      - name: Set REPORT_TYPE for scheduled runs
        id: set_report_type
        if: github.event_name == 'schedule'
        run: |
          if [ "${{ github.event.schedule }}" = "0 22 * * *" ]; then
            echo "report_type=morning_plan" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.schedule }}" = "0 12 * * *" ]; then
            echo "report_type=evening_realtime" >> $GITHUB_OUTPUT
          fi

      # 🚨🚨🚨 디버깅을 위한 환경 변수 출력 단계 (임시) 🚨🚨🚨
      - name: Debug secrets
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
        run: |
          echo "SENDER_EMAIL is set: ${{ env.SENDER_EMAIL != '' }}"
          echo "GMAIL_APP_PASSWORD is set: ${{ env.GMAIL_APP_PASSWORD != '' }}"
          echo "RECEIVER_EMAIL is set: ${{ env.RECEIVER_EMAIL != '' }}"

      - name: Run Turtle Trading Script
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          REPORT_TYPE: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.report_type) || steps.set_report_type.outputs.report_type }}
        run: |
          python main.py
